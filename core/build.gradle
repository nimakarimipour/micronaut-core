import me.champeau.gradle.japicmp.JapicmpTask
import io.micronaut.build.internal.japicmp.RemovedPackages

plugins {
    id "io.micronaut.build.internal.convention-core-library"
    id "org.checkerframework" version "0.6.37"
}

micronautBuild {
    core {
        documented = false
    }
}

dependencies {
    compileOnly libs.managed.jakarta.annotation.api
    compileOnly libs.graal
    compileOnly libs.managed.kotlin.stdlib

    // UCR Tainting checker
    checkerFramework "edu.ucr.cs.riple.taint:ucrtainting-checker:$System.env.UCRT_VERSION"
    compileOnly "edu.ucr.cs.riple.taint:ucrtainting-checker-qual:$System.env.UCRT_VERSION"
}

spotless {
    java {
        targetExclude '**/io/micronaut/core/io/scan/AnnotationClassReader.java',
                '**/io/micronaut/core/io/scan/Attribute.java',
                '**/io/micronaut/core/io/scan/Context.java',
                '**/io/micronaut/core/util/clhm/**',
                '**/io/micronaut/core/util/AntPathMatcher.java'
    }
    format 'javaMisc', {
        targetExclude '**/io/micronaut/core/util/clhm/**'
    }
}

def versionInfo = tasks.register("micronautVersionInfo", WriteProperties) {
    outputFile = "${buildDir}/resources/version/micronaut-version.properties"
    property 'micronaut.version', projectVersion
}
tasks.named("processResources") {
    from(versionInfo)
}

tasks.withType(JapicmpTask).configureEach {
   richReport {
       addViolationTransformer(RemovedPackages, [prefixes: ['io.micronaut.caffeine'], exact: []])
   }
}

repositories {
    mavenLocal()
    mavenCentral()
}

def checkerConfig = project.rootDir.absolutePath + "/annotator-out/" + project.name + "/checker.xml"
checkerFramework {
    checkers =["edu.ucr.cs.riple.taint.ucrtainting.UCRTaintingChecker"]
    extraJavacArgs = [
            "-Awarns",
            "-AsuppressWarnings=type.anno.before.modifier,type.anno.before.decl.anno",
            "-AannotatedPackages=io.micronaut.core",
            "-AenableLibraryCheck=$System.env.ANNOTATOR_LIBRARY",
            "-AenablePolyTaintInference=$System.env.ANNOTATOR_POLY",
            "-AenableTypeArgumentInference=$System.env.ANNOTATOR_TYPE_ARG",
            "-AenableSerialization",
            "-AserializationConfigPath=$checkerConfig"
    ]
}
