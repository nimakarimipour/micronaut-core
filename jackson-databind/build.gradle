plugins {
    id "io.micronaut.build.internal.convention-library"
    id "org.checkerframework" version "0.6.37"
}

dependencies {
    annotationProcessor project(":inject-java")
    annotationProcessor project(":graal")

    api project(":jackson-core")

    compileOnly libs.graal
    compileOnly platform(libs.test.boms.micronaut.validation)
    compileOnly (libs.micronaut.validation) {
        exclude group: 'io.micronaut'
    }

    api libs.managed.jackson.databind
    api libs.managed.jackson.datatype.jdk8
    api libs.managed.jackson.datatype.jsr310
    compileOnly(libs.managed.jackson.module.kotlin) {
        transitive = false
    }
    compileOnly(libs.managed.jackson.module.afterburner) {
        transitive = false
    }
    compileOnly(libs.managed.jackson.module.parameterNames) {
        transitive = false
    }

    testAnnotationProcessor project(":inject-java")
    testImplementation project(":inject-java")
    testImplementation project(":inject-java-test")
    testImplementation project(":inject-groovy")
    testImplementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml"
    testImplementation libs.managed.snakeyaml
    if (!JavaVersion.current().isJava9Compatible()) {
        testImplementation files(org.gradle.internal.jvm.Jvm.current().toolsJar)
    }

    // UCR Tainting checker
    checkerFramework "edu.ucr.cs.riple.taint:ucrtainting-checker:$System.env.UCRT_VERSION"
    compileOnly "edu.ucr.cs.riple.taint:ucrtainting-checker-qual:$System.env.UCRT_VERSION"
}

repositories {
    mavenLocal()
    mavenCentral()
}

def checkerConfig = project.rootDir.absolutePath + "/annotator-out/" + project.name + "/checker.xml"
checkerFramework {
    checkers =["edu.ucr.cs.riple.taint.ucrtainting.UCRTaintingChecker"]
    extraJavacArgs = [
            "-Awarns",
            "-AsuppressWarnings=type.anno.before.modifier,type.anno.before.decl.anno",
            "-AannotatedPackages=io.micronaut.core",
            "-AenableLibraryCheck=$System.env.ANNOTATOR_LIBRARY",
            "-AenablePolyTaintInference=$System.env.ANNOTATOR_POLY",
            "-AenableTypeArgumentInference=$System.env.ANNOTATOR_TYPE_ARG",
            "-AenableSerialization",
            "-AserializationConfigPath=$checkerConfig"
    ]
}
