plugins {
    id "io.micronaut.build.internal.convention-library"
    id "org.checkerframework" version "0.6.37"
}

dependencies {

    api project(":inject")
    api project(":aop")
    api libs.asm.tree
    api libs.bundles.asm
    api(libs.managed.java.parser.core) {
        exclude group:'org.javassist', module:'javassist'
        exclude group:'com.google.guava', module:'guava'
    }
    implementation project(":core-reactive")

    compileOnly libs.managed.kotlin.stdlib.jdk8

    // UCR Tainting checker
    checkerFramework "edu.ucr.cs.riple.taint:ucrtainting-checker:$System.env.UCRT_VERSION"
    compileOnly "edu.ucr.cs.riple.taint:ucrtainting-checker-qual:$System.env.UCRT_VERSION"
}

repositories {
    mavenLocal()
    mavenCentral()
}

def checkerConfig = project.rootDir.absolutePath + "/annotator-out/" + project.name + "/checker.xml"
checkerFramework {
    checkers =["edu.ucr.cs.riple.taint.ucrtainting.UCRTaintingChecker"]
    extraJavacArgs = [
            "-Awarns",
            "-AsuppressWarnings=type.anno.before.modifier,type.anno.before.decl.anno",
            "-AannotatedPackages=io.micronaut.core",
            "-AenableLibraryCheck=$System.env.ANNOTATOR_LIBRARY",
            "-AenablePolyTaintInference=$System.env.ANNOTATOR_POLY",
            "-AenableTypeArgumentInference=$System.env.ANNOTATOR_TYPE_ARG",
            "-AenableSerialization",
            "-AserializationConfigPath=$checkerConfig"
    ]
}
