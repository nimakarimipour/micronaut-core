plugins {
    id "io.micronaut.build.internal.convention-library"
    id "org.checkerframework" version "0.6.37"
}

dependencies {
    annotationProcessor project(":inject-java")
    annotationProcessor project(":graal")
    api project(':inject')
    api project(':aop')

    compileOnly project(':core-reactive')
    compileOnly libs.log4j
    compileOnly libs.logback.classic

    // Support validation annotations
    compileOnly platform(libs.test.boms.micronaut.validation)
    compileOnly (libs.micronaut.validation) {
        exclude group: 'io.micronaut'
    }

    testCompileOnly project(":inject-groovy")
    testAnnotationProcessor project(":inject-java")
    testImplementation project(":core-reactive")
    testImplementation project(":inject-java-test")

    // UCR Tainting checker
    checkerFramework "edu.ucr.cs.riple.taint:ucrtainting-checker:$System.env.UCRT_VERSION"
    compileOnly "edu.ucr.cs.riple.taint:ucrtainting-checker-qual:$System.env.UCRT_VERSION"
}

spotless {
    java {
        targetExclude '**/io/micronaut/scheduling/cron/CronExpression.java'
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

def checkerConfig = project.rootDir.absolutePath + "/annotator-out/" + project.name + "/checker.xml"
checkerFramework {
    checkers =["edu.ucr.cs.riple.taint.ucrtainting.UCRTaintingChecker"]
    extraJavacArgs = [
            "-Awarns",
            "-AsuppressWarnings=type.anno.before.modifier,type.anno.before.decl.anno",
            "-AannotatedPackages=io.micronaut.core",
            "-AenableLibraryCheck=$System.env.ANNOTATOR_LIBRARY",
            "-AenablePolyTaintInference=$System.env.ANNOTATOR_POLY",
            "-AenableTypeArgumentInference=$System.env.ANNOTATOR_TYPE_ARG",
            "-AenableSerialization",
            "-AserializationConfigPath=$checkerConfig"
    ]
}
